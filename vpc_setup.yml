- hosts: localhost
  gather_facts: False
  tasks:
    - name: import variables
      include_vars: vars/vpc_setup

    - name: VPC setup
      ec2_vpc_net:
        name: "{{vpc_name}}"
        cidr_block: "{{vpcCIDR}}"
        region: "{{region}}"
        state : "{{state}}"
        dns_support: yes
        dns_hostnames: yes
      register: vpcout

    - name: Create subnet
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        cidr: "{{Pubsub1CIDR}}"
        state: "{{state}}"
        region: "{{region}}"
        az: "{{zone1}}"
        map_public: yes
        tags:
          Name: subnet1
      register: subout1

    - debug:
        var: subout1

    - name: Create subnet
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        cidr: "{{Pubsub2CIDR}}"
        state: "{{state}}"
        region: "{{region}}"
        az: "{{zone2}}"
        map_public: yes
        tags:
          Name: subnet2
      register: subout2

    - name: Create subnet
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        cidr: "{{Pubsub3CIDR}}"
        state: "{{state}}"
        region: "{{region}}"
        az: "{{zone3}}"
        map_public: yes
        tags:
          Name: subnet3
      register: subout3

    - name: Create subnet
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        cidr: "{{Prisub1CIDR}}"
        state: "{{state}}"
        region: "{{region}}"
        az: "{{zone1}}"
        tags:
          Name: subnet1-priv
      register: subout1priv

    - name: Create subnet
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        cidr: "{{Prisub2CIDR}}"
        state: "{{state}}"
        region: "{{region}}"
        az: "{{zone2}}"
        tags:
          Name: subnet2-priv
      register: subout2priv

    - name: Create subnet
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        cidr: "{{Prisub3CIDR}}"
        state: "{{state}}"
        region: "{{region}}"
        az: "{{zone3}}"
        tags:
          Name: subnet3-priv
      register: subout3priv

    - name: create Internet gateway
      ec2_vpc_igw:
        vpc_id: "{{vpcout.vpc.id}}"
        state: "{{state}}"
        region: "{{region}}"
        tags:
          Name: IGW1
      register: IGWpub


    - name: create Route table for pub subnets
      ec2_vpc_route_table:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        tags:
          Name: Pubroute
        subnets:
            - "{{subout1.subnet.id}}"
            - "{{subout2.subnet.id}}"
            - "{{subout3.subnet.id}}"
        routes:
            - dest: 0.0.0.0/0
              gateway_id: "{{IGWpub.gateway_id}}"
      register: public_route_table

    - name: Create new nat gateway if a nat gateway does not yet exist in the subnet.
      ec2_vpc_nat_gateway:
        state: "{{state}}"
        subnet_id: "{{subout1priv.subnet.id}}"
        wait: yes
        region: "{{region}}"
        if_exist_do_not_create: true
      register: nat_IGW

    - name: create Route table for private subnets
      ec2_vpc_route_table:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        tags:
          Name: Privroute
        subnets:
          - "{{subout1priv.subnet.id}}"
          - "{{subout2priv.subnet.id}}"
          - "{{subout3priv.subnet.id}}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{nat_IGW.nat_gateway_id}}"
      register: private_route_table














